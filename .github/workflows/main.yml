name: Build and Release

on:
  push:
    branches: [ main ]
    paths:
      - 'package.json'
    tags:
      - 'v*'
  pull_request:
    branches: [ main ]

permissions:
  contents: write

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 0
        token: ${{ secrets.PAT_TOKEN }}
    
    - name: Use Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18.x'
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Check version and create tag
      env:
        GITHUB_TOKEN: ${{ secrets.PAT_TOKEN }}
      run: |
        VERSION=$(node -p "require('./package.json').version")
        CURRENT_TAG=$(git tag -l "v$VERSION")
        if [ -z "$CURRENT_TAG" ]; then
          echo "Creating new tag v$VERSION"
          git config --global user.name 'GitHub Actions'
          git config --global user.email 'actions@github.com'
          git tag -a "v$VERSION" -m "Release version $VERSION"
          git push origin "v$VERSION"
        else
          echo "Tag v$VERSION already exists"
        fi

    - name: Update manifest version
      env:
        GITHUB_TOKEN: ${{ secrets.PAT_TOKEN }}
      run: |
        VERSION=$(node -p "require('./package.json').version")
        echo "Updating manifest.json version to $VERSION"
        sed -i "s/\"version\": \".*\"/\"version\": \"$VERSION\"/" public/manifest.json
        git config --global user.name 'GitHub Actions'
        git config --global user.email 'actions@github.com'
        git add public/manifest.json
        git commit -m "chore: Update manifest version to $VERSION" || echo "No version change"
        git push origin HEAD:${{ github.ref }}

    - name: Build
      run: npm run build
      env:
        NODE_ENV: production

    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: extension-dist
        path: azure-devops-wiki-editor.zip
        if-no-files-found: error

  release:
    needs: build
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/v')

    steps:
    - name: Download artifacts
      uses: actions/download-artifact@v3
      with:
        name: extension-dist
        path: artifacts

    - name: Create Release
      uses: softprops/action-gh-release@v1
      with:
        files: artifacts/azure-devops-wiki-editor.zip
        generate_release_notes: true
      env:
        GITHUB_TOKEN: ${{ secrets.PAT_TOKEN }}
