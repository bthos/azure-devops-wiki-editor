name: Build and Release

on:
  push:
    tags:
      - 'v*'
  pull_request:
    branches: [ main ]

permissions:
  contents: write

jobs:
  build:
# Skip if the commit was made by the GitHub Actions bot
    if: github.actor != 'github-actions[bot]'
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 0
        token: ${{ secrets.PAT_TOKEN }}
    
    - name: Use Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18.x'
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Set version from tag
      id: get_version
      if: startsWith(github.ref, 'refs/tags/v')
      run: |
        VERSION=${GITHUB_REF#refs/tags/v}
        echo "version=$VERSION" >> $GITHUB_OUTPUT
        
        # Update package.json version
        npm version $VERSION --no-git-tag-version --allow-same-version
        
        # Update manifest.json version
        sed -i "s/\"version\": \".*\"/\"version\": \"$VERSION\"/" public/manifest.json
        
        # Commit version updates
        git config --global user.name 'GitHub Actions'
        git config --global user.email 'actions@github.com'
        git add package.json public/manifest.json
        git commit -m "chore: Sync versions to $VERSION [skip ci]"
        git push origin HEAD:main

    - name: Build
      run: npm run build
      env:
        NODE_ENV: production

    - name: Create artifacts directory
      run: mkdir -p artifacts

    - name: Create versioned zip
      if: startsWith(github.ref, 'refs/tags/v')
      run: |
        cd dist
        zip -r "../artifacts/azure-devops-wiki-editor-v${{ steps.get_version.outputs.version }}.zip" *

    - name: Upload build artifacts
      if: startsWith(github.ref, 'refs/tags/v')
      uses: actions/upload-artifact@v4
      with:
        name: extension-dist-v${{ steps.get_version.outputs.version }}
        path: artifacts/azure-devops-wiki-editor-v${{ steps.get_version.outputs.version }}.zip
        if-no-files-found: error

  release:
    needs: build
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/v')

    steps:
    - name: Get Version
      id: get_version
      run: |
        VERSION=${GITHUB_REF#refs/tags/v}
        echo "version=$VERSION" >> $GITHUB_OUTPUT

    - name: Download artifacts
      uses: actions/download-artifact@v4
      with:
        name: extension-dist-v${{ steps.get_version.outputs.version }}
        path: artifacts

    - name: Create Release
      uses: softprops/action-gh-release@v1
      with:
        files: artifacts/azure-devops-wiki-editor-v${{ steps.get_version.outputs.version }}.zip
        generate_release_notes: true
        tag_name: ${{ github.ref_name }}
      env:
        GITHUB_TOKEN: ${{ secrets.PAT_TOKEN }}
